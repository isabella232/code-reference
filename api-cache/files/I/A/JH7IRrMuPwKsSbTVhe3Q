1629319547
Pc7k9LlPov%3A3f977993afe9911f8e60ddbdf533ac68-b180854fafe245a942be89c134c2af9b
s:7652:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6NDA6IkFkbWluIGNhbmNlbGxlZCBvcmRlciBlbWFpbCAocGxhaW4gdGV4dCkiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6NDU2OiJUaGlzIHRlbXBsYXRlIGNhbiBiZSBvdmVycmlkZGVuIGJ5IGNvcHlpbmcgaXQgdG8geW91cnRoZW1lL3dvb2NvbW1lcmNlL2VtYWlscy9wbGFpbi9hZG1pbi1jYW5jZWxsZWQtb3JkZXIucGhwLgoKSE9XRVZFUiwgb24gb2NjYXNpb24gV29vQ29tbWVyY2Ugd2lsbCBuZWVkIHRvIHVwZGF0ZSB0ZW1wbGF0ZSBmaWxlcyBhbmQgeW91Cih0aGUgdGhlbWUgZGV2ZWxvcGVyKSB3aWxsIG5lZWQgdG8gY29weSB0aGUgbmV3IGZpbGVzIHRvIHlvdXIgdGhlbWUgdG8KbWFpbnRhaW4gY29tcGF0aWJpbGl0eS4gV2UgdHJ5IHRvIGRvIHRoaXMgYXMgbGl0dGxlIGFzIHBvc3NpYmxlLCBidXQgaXQgZG9lcwpoYXBwZW4uIFdoZW4gdGhpcyBvY2N1cnMgdGhlIHZlcnNpb24gb2YgdGhlIHRlbXBsYXRlIGZpbGUgd2lsbCBiZSBidW1wZWQgYW5kCnRoZSByZWFkbWUgd2lsbCBsaXN0IGFueSBpbXBvcnRhbnQgY2hhbmdlcy4iO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YTozOntpOjA7Tzo0MjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcU2VlIjozOntzOjc6IgAqAG5hbWUiO3M6Mzoic2VlIjtzOjk6IgAqAHJlZmVycyI7Tzo1MjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUmVmZXJlbmNlXFVybCI6MTp7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFJlZmVyZW5jZVxVcmwAdXJpIjtzOjU3OiJodHRwczovL2RvY3Mud29vY29tbWVyY2UuY29tL2RvY3VtZW50L3RlbXBsYXRlLXN0cnVjdHVyZS8iO31zOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tjt9aToxO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXEdlbmVyaWMiOjI6e3M6NzoiACoAbmFtZSI7czo3OiJwYWNrYWdlIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czozNDoiV29vQ29tbWVyY2UvVGVtcGxhdGVzL0VtYWlscy9QbGFpbiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fWk6MjtPOjQ2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xWZXJzaW9uIjozOntzOjc6IgAqAG5hbWUiO3M6NzoidmVyc2lvbiI7czo1NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFZlcnNpb24AdmVyc2lvbiI7czo1OiI0LjEuMCI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQiOjI6e3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2UiO3M6MDoiIjtzOjU2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlQWxpYXNlcyI7YTowOnt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjI7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBoYXNoIjtzOjMyOiJiMTgwODU0ZmFmZTI0NWE5NDJiZTg5YzEzNGMyYWY5YiI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lIjtzOjI1OiJhZG1pbi1jYW5jZWxsZWQtb3JkZXIucGhwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6NjA6Indvb2NvbW1lcmNlL3RlbXBsYXRlcy9lbWFpbHMvcGxhaW4vYWRtaW4tY2FuY2VsbGVkLW9yZGVyLnBocCI7czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBzb3VyY2UiO3M6MjM4NToiPD9waHAKLyoqCiAqIEFkbWluIGNhbmNlbGxlZCBvcmRlciBlbWFpbCAocGxhaW4gdGV4dCkKICoKICogVGhpcyB0ZW1wbGF0ZSBjYW4gYmUgb3ZlcnJpZGRlbiBieSBjb3B5aW5nIGl0IHRvIHlvdXJ0aGVtZS93b29jb21tZXJjZS9lbWFpbHMvcGxhaW4vYWRtaW4tY2FuY2VsbGVkLW9yZGVyLnBocC4KICoKICogSE9XRVZFUiwgb24gb2NjYXNpb24gV29vQ29tbWVyY2Ugd2lsbCBuZWVkIHRvIHVwZGF0ZSB0ZW1wbGF0ZSBmaWxlcyBhbmQgeW91CiAqICh0aGUgdGhlbWUgZGV2ZWxvcGVyKSB3aWxsIG5lZWQgdG8gY29weSB0aGUgbmV3IGZpbGVzIHRvIHlvdXIgdGhlbWUgdG8KICogbWFpbnRhaW4gY29tcGF0aWJpbGl0eS4gV2UgdHJ5IHRvIGRvIHRoaXMgYXMgbGl0dGxlIGFzIHBvc3NpYmxlLCBidXQgaXQgZG9lcwogKiBoYXBwZW4uIFdoZW4gdGhpcyBvY2N1cnMgdGhlIHZlcnNpb24gb2YgdGhlIHRlbXBsYXRlIGZpbGUgd2lsbCBiZSBidW1wZWQgYW5kCiAqIHRoZSByZWFkbWUgd2lsbCBsaXN0IGFueSBpbXBvcnRhbnQgY2hhbmdlcy4KICoKICogQHNlZSBodHRwczovL2RvY3Mud29vY29tbWVyY2UuY29tL2RvY3VtZW50L3RlbXBsYXRlLXN0cnVjdHVyZS8KICogQHBhY2thZ2UgV29vQ29tbWVyY2UvVGVtcGxhdGVzL0VtYWlscy9QbGFpbgogKiBAdmVyc2lvbiA0LjEuMAogKi8KCmRlZmluZWQoICdBQlNQQVRIJyApIHx8IGV4aXQ7CgplY2hvICI9LT0tPS09LT0tPS09LT0tPS09LT0tPS09LT0tPS09LT0tPS09LT0tPVxuIjsKZWNobyBlc2NfaHRtbCggd3Bfc3RyaXBfYWxsX3RhZ3MoICRlbWFpbF9oZWFkaW5nICkgKTsKZWNobyAiXG49LT0tPS09LT0tPS09LT0tPS09LT0tPS09LT0tPS09LT0tPS09LT0tPVxuXG4iOwoKLyogdHJhbnNsYXRvcnM6ICUxJHM6IE9yZGVyIG51bWJlci4gJTIkczogQ3VzdG9tZXIgZnVsbCBuYW1lICovCmVjaG8gc3ByaW50ZiggZXNjX2h0bWxfXyggJ05vdGlmaWNhdGlvbiB0byBsZXQgeW91IGtub3cgJm1kYXNoOyBvcmRlciAjJTEkcyBiZWxvbmdpbmcgdG8gJTIkcyBoYXMgYmVlbiBjYW5jZWxsZWQ6JywgJ3dvb2NvbW1lcmNlJyApLCBlc2NfaHRtbCggJG9yZGVyLT5nZXRfb3JkZXJfbnVtYmVyKCkgKSwgZXNjX2h0bWwoICRvcmRlci0+Z2V0X2Zvcm1hdHRlZF9iaWxsaW5nX2Z1bGxfbmFtZSgpICkgKSAuICJcblxuIjsKCi8qCiAqIEBob29rZWQgV0NfRW1haWxzOjpvcmRlcl9kZXRhaWxzKCkgU2hvd3MgdGhlIG9yZGVyIGRldGFpbHMgdGFibGUuCiAqIEBob29rZWQgV0NfU3RydWN0dXJlZF9EYXRhOjpnZW5lcmF0ZV9vcmRlcl9kYXRhKCkgR2VuZXJhdGVzIHN0cnVjdHVyZWQgZGF0YS4KICogQGhvb2tlZCBXQ19TdHJ1Y3R1cmVkX0RhdGE6Om91dHB1dF9zdHJ1Y3R1cmVkX2RhdGEoKSBPdXRwdXRzIHN0cnVjdHVyZWQgZGF0YS4KICogQHNpbmNlIDIuNS4wCiAqLwpkb19hY3Rpb24oICd3b29jb21tZXJjZV9lbWFpbF9vcmRlcl9kZXRhaWxzJywgJG9yZGVyLCAkc2VudF90b19hZG1pbiwgJHBsYWluX3RleHQsICRlbWFpbCApOwoKZWNobyAiXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiI7CgovKgogKiBAaG9va2VkIFdDX0VtYWlsczo6b3JkZXJfbWV0YSgpIFNob3dzIG9yZGVyIG1ldGEgZGF0YS4KICovCmRvX2FjdGlvbiggJ3dvb2NvbW1lcmNlX2VtYWlsX29yZGVyX21ldGEnLCAkb3JkZXIsICRzZW50X3RvX2FkbWluLCAkcGxhaW5fdGV4dCwgJGVtYWlsICk7CgovKgogKiBAaG9va2VkIFdDX0VtYWlsczo6Y3VzdG9tZXJfZGV0YWlscygpIFNob3dzIGN1c3RvbWVyIGRldGFpbHMKICogQGhvb2tlZCBXQ19FbWFpbHM6OmVtYWlsX2FkZHJlc3MoKSBTaG93cyBlbWFpbCBhZGRyZXNzCiAqLwpkb19hY3Rpb24oICd3b29jb21tZXJjZV9lbWFpbF9jdXN0b21lcl9kZXRhaWxzJywgJG9yZGVyLCAkc2VudF90b19hZG1pbiwgJHBsYWluX3RleHQsICRlbWFpbCApOwoKZWNobyAiXG5cbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuIjsKCi8qKgogKiBTaG93IHVzZXItZGVmaW5lZCBhZGRpdGlvbmFsIGNvbnRlbnQgLSB0aGlzIGlzIHNldCBpbiBlYWNoIGVtYWlsJ3Mgc2V0dGluZ3MuCiAqLwppZiAoICRhZGRpdGlvbmFsX2NvbnRlbnQgKSB7CgllY2hvIGVzY19odG1sKCB3cF9zdHJpcF9hbGxfdGFncyggd3B0ZXh0dXJpemUoICRhZGRpdGlvbmFsX2NvbnRlbnQgKSApICk7CgllY2hvICJcblxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4iOwp9CgplY2hvIHdwX2tzZXNfcG9zdCggYXBwbHlfZmlsdGVycyggJ3dvb2NvbW1lcmNlX2VtYWlsX2Zvb3Rlcl90ZXh0JywgZ2V0X29wdGlvbiggJ3dvb2NvbW1lcmNlX2VtYWlsX2Zvb3Rlcl90ZXh0JyApICkgKTsKIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e319";